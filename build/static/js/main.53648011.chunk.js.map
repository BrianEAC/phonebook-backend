{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","services","getAll","axios","get","create","newObject","post","erase","id","delete","Search","name","change","value","onChange","PersonForm","submit","nameValue","nameChange","numberValue","numberChange","onSubmit","type","Persons","persons","handleDelete","map","person","number","onClick","Notification","message","thisClass","className","App","useState","setPersons","searchName","setSearchName","newName","setNewName","newNumber","setNewNumber","theMessage","setMessage","theDeletedMessage","setDeleted","useEffect","personsService","then","response","data","filteredPersons","search","filter","toLowerCase","includes","filterPersons","e","target","preventDefault","find","alert","personObject","concat","setTimeout","window","confirm","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53648011.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst erase = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst services = { getAll, create, erase }\n\nexport default services","import React, { useEffect, useState } from 'react'\nimport personsService from './services/persons'\n\n\nconst Search = ({ name, change }) => {\n  return (\n    <>\n      <h3>Search</h3>\n      <input\n        value={name}\n        onChange={change} />\n    </>\n  )\n}\n\nconst PersonForm = ({ submit, nameValue, nameChange, numberValue, numberChange }) => {\n  return (\n    <>\n      <h3>Add new</h3>\n      <form onSubmit={submit}>\n        <div>\n          name: <input\n            value={nameValue}\n            onChange={nameChange} />\n        </div>\n        <div>number: <input\n          value={numberValue}\n          onChange={numberChange} /></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <>\n      <h2>Numbers</h2>\n      <ul>\n        {persons.map(person => <li key={person.number}>{person.name} : {person.number}<button onClick={() => handleDelete(person.id, person.name)}>delete</button></li>)}\n      </ul>\n    </>\n  )\n}\n\nconst Notification = ({ message, thisClass }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className={thisClass}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [searchName, setSearchName] = useState()\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [theMessage, setMessage] = useState(null)\n  const [theDeletedMessage, setDeleted] = useState(null)\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const addPerson = (e) => {\n    e.preventDefault()\n    if (persons.find(person => person.name === newName) || persons.find(person => person.number === newNumber)) {\n      alert(`${newName} already exists in phonebook`)\n    }\n    else {\n      const personObject = { name: newName, number: newNumber }\n      personsService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setMessage(`'${personObject.name}' was added`)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => { setMessage(null) }, 3000)\n\n        }\n        )\n    }\n  }\n\n  const erasePerson = (id, name) => {\n    if (window.confirm(`Do you really want to delete ${name}?`)) {\n      personsService\n        .erase(id)\n        .then(() => {\n          setPersons(persons.filter((p) => p.id !== id))\n          setSearchName('')\n          setDeleted(`'${name}' was deleted`)\n          setTimeout(() => { setDeleted(null) }, 3000);\n        }\n        )\n  }\n  }\n\n\n  const nameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n\n  const numberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const searchChange = (e) => {\n    setSearchName(e.target.value)\n  }\n\n  const filterPersons = (persons, search) => {\n    if (!search) {\n      return persons\n    }\n    return persons.filter(person => {\n      const personName = person.name.toLowerCase()\n      return personName.includes(search)\n    })\n  }\n\n  const filteredPersons = filterPersons(persons, searchName)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={theMessage} thisClass='added' />\n      <Notification message={theDeletedMessage} thisClass='deleted' />\n      <Search name={searchName} change={searchChange} />\n      <PersonForm submit={addPerson} nameValue={newName} nameChange={nameChange} numberValue={newNumber} numberChange={numberChange} />\n      <Persons persons={filteredPersons} handleDelete={erasePerson} />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}